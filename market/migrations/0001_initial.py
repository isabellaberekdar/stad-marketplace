# Generated by Django 2.2.1 on 2019-09-28 21:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('name', models.CharField(help_text='Enter a name for this category.', max_length=30, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique order number', primary_key=True, serialize=False)),
                ('date_ordered', models.DateTimeField(auto_now_add=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, help_text='Enter the subtotal for this order.', max_digits=6)),
                ('tax', models.DecimalField(decimal_places=2, default=0, help_text='Enter the tax for this order.', max_digits=6)),
                ('address', models.CharField(default='', max_length=255)),
                ('city', models.CharField(default='', max_length=30)),
                ('state', models.CharField(default='', max_length=30)),
                ('zip_code', models.CharField(default='', max_length=10)),
                ('payment_method', models.CharField(default='', max_length=16)),
            ],
            options={
                'ordering': ['-date_ordered'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='Enter a unique username.', max_length=30, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('zip_code', models.CharField(max_length=10)),
                ('payment_method', models.CharField(default='None', max_length=16)),
                ('order_seller', models.CharField(default='None', max_length=100)),
                ('order_buyer', models.CharField(default='None', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='market.User')),
                ('date_ordered', models.DateTimeField(auto_now_add=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, help_text='Enter the subtotal for this order.', max_digits=6)),
                ('tax', models.DecimalField(decimal_places=2, default=0, help_text='Enter the tax for this order.', max_digits=6)),
                ('address', models.CharField(default='', max_length=255)),
                ('city', models.CharField(default='', max_length=30)),
                ('state', models.CharField(default='', max_length=30)),
                ('zip_code', models.CharField(default='', max_length=10)),
                ('payment_method', models.CharField(default='', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='The unique ID for this product.', primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price of this product.', max_digits=7, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(99999.99)])),
                ('description', models.TextField(help_text='Enter a description for this product.', max_length=2500)),
                ('quantity_available', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
                ('quantity_sold', models.IntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('delisted', models.BooleanField(default=False, help_text='Delisting an item marks it as no longer available.')),
                ('category', models.ManyToManyField(help_text='Enter a category for this product.', to='market.Category')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.User')),
            ],
            options={
                'ordering': ['-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for an ordered product', primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price of this product.', max_digits=6)),
                ('status', models.CharField(choices=[('p', 'Order placed'), ('r', 'Order received'), ('s', 'Shipped'), ('d', 'Delivered')], default='p', help_text='The fulfillment status of a particular item.', max_length=1)),
                ('containing_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='buyer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='market.User'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter a description for this image.', max_length=35)),
                ('image', models.ImageField(upload_to='./pictures/')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='market.Product')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='market.User')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCartProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for an ordered product', primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price of this product.', max_digits=6)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Product')),
                ('containing_cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.ShoppingCart')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
    ]
